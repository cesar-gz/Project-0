[{"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\index.js":"1","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\App.js":"2","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\restaurants-list.js":"3","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\add-review.js":"4","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\login.js":"5","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\restaurants.js":"6","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\services\\restaurant.js":"7","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\http-common.js":"8","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\spinwheel.js":"9"},{"size":248,"mtime":1645587358366,"results":"10","hashOfConfig":"11"},{"size":2606,"mtime":1651119148775,"results":"12","hashOfConfig":"11"},{"size":5030,"mtime":1645587358363,"results":"13","hashOfConfig":"11"},{"size":2425,"mtime":1645587358363,"results":"14","hashOfConfig":"11"},{"size":1304,"mtime":1645587358363,"results":"15","hashOfConfig":"11"},{"size":3324,"mtime":1645587358364,"results":"16","hashOfConfig":"11"},{"size":1510,"mtime":1650321949702,"results":"17","hashOfConfig":"11"},{"size":503,"mtime":1650321946996,"results":"18","hashOfConfig":"11"},{"size":1077,"mtime":1651119198563,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13us4jh",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\index.js",[],[],"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\App.js",["50"],[],"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\restaurants-list.js",["51","52"],[],"import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RestaurantsList = props => {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [searchName, setSearchName ] = useState(\"\");\r\n  const [searchZip, setSearchZip ] = useState(\"\");\r\n  const [searchCuisine, setSearchCuisine ] = useState(\"\");\r\n  const [cuisines, setCuisines] = useState([\"All Cuisines\"]);\r\n\r\n  useEffect(() => {\r\n    retrieveRestaurants();\r\n    retrieveCuisines();\r\n  }, []);\r\n\r\n  const onChangeSearchName = e => {\r\n    const searchName = e.target.value;\r\n    setSearchName(searchName);\r\n  };\r\n\r\n  const onChangeSearchZip = e => {\r\n    const searchZip = e.target.value;\r\n    setSearchZip(searchZip);\r\n  };\r\n\r\n  const onChangeSearchCuisine = e => {\r\n    const searchCuisine = e.target.value;\r\n    setSearchCuisine(searchCuisine);\r\n    \r\n  };\r\n\r\n  const retrieveRestaurants = () => {\r\n    RestaurantDataService.getAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const retrieveCuisines = () => {\r\n    RestaurantDataService.getCuisines()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCuisines([\"All Cuisines\"].concat(response.data));\r\n        \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveRestaurants();\r\n  };\r\n\r\n  const find = (query, by) => {\r\n    RestaurantDataService.find(query, by)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRestaurants(response.data.restaurants);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByName = () => {\r\n    find(searchName, \"name\")\r\n  };\r\n\r\n  const findByZip = () => {\r\n    find(searchZip, \"zipcode\")\r\n  };\r\n\r\n  const findByCuisine = () => {\r\n    if (searchCuisine == \"All Cuisines\") {\r\n      refreshList();\r\n    } else {\r\n      find(searchCuisine, \"cuisine\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row pb-1\">\r\n        <div className=\"input-group col-lg\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by name\"\r\n            value={searchName}\r\n            onChange={onChangeSearchName}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByName}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group col-lg\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by zip\"\r\n            value={searchZip}\r\n            onChange={onChangeSearchZip}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByZip}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-group col-lg\">\r\n\r\n          <select onChange={onChangeSearchCuisine}>\r\n             {cuisines.map(cuisine => {\r\n               return (\r\n                 <option value={cuisine}> {cuisine.substr(0, 20)} </option>\r\n               )\r\n             })}\r\n          </select>\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByCuisine}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {restaurants.map((restaurant) => {\r\n          const address = `${restaurant.address.building} ${restaurant.address.street}, ${restaurant.address.zipcode}`;\r\n          return (\r\n            <div className=\"col-lg-4 pb-1\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{restaurant.name}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n                    <strong>Address: </strong>{address}\r\n                  </p>\r\n                  <div className=\"row\">\r\n                  <Link to={\"/restaurants/\"+restaurant._id} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">\r\n                    View Reviews\r\n                  </Link>\r\n                  <a target=\"_blank\" href={\"https://www.google.com/maps/place/\" + address} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">View Map</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantsList;","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\add-review.js",[],[],"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\login.js",[],[],"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\restaurants.js",["53"],[],"import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Restaurant = props => {\r\n  const initialRestaurantState = {\r\n    id: null,\r\n    name: \"\",\r\n    address: {},\r\n    cuisine: \"\",\r\n    reviews: []\r\n  };\r\n  const [restaurant, setRestaurant] = useState(initialRestaurantState);\r\n\r\n  const getRestaurant = id => {\r\n    RestaurantDataService.get(id)\r\n      .then(response => {\r\n        setRestaurant(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRestaurant(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const deleteReview = (reviewId, index) => {\r\n    RestaurantDataService.deleteReview(reviewId, props.user.id)\r\n      .then(response => {\r\n        setRestaurant((prevState) => {\r\n          prevState.reviews.splice(index, 1)\r\n          return({\r\n            ...prevState\r\n          })\r\n        })\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {restaurant ? (\r\n        <div>\r\n          <h5>{restaurant.name}</h5>\r\n          <p>\r\n            <strong>Cuisine: </strong>{restaurant.cuisine}<br/>\r\n            <strong>Address: </strong>{restaurant.address.building} {restaurant.address.street}, {restaurant.address.zipcode}\r\n          </p>\r\n          <Link to={\"/restaurants/\" + props.match.params.id + \"/review\"} className=\"btn btn-primary\">\r\n            Add Review\r\n          </Link>\r\n          <h4> Reviews </h4>\r\n          <div className=\"row\">\r\n            {restaurant.reviews.length > 0 ? (\r\n             restaurant.reviews.map((review, index) => {\r\n               return (\r\n                 <div className=\"col-lg-4 pb-1\" key={index}>\r\n                   <div className=\"card\">\r\n                     <div className=\"card-body\">\r\n                       <p className=\"card-text\">\r\n                         {review.text}<br/>\r\n                         <strong>User: </strong>{review.name}<br/>\r\n                         <strong>Date: </strong>{review.date}\r\n                       </p>\r\n                       {props.user && props.user.id === review.user_id &&\r\n                          <div className=\"row\">\r\n                            <a onClick={() => deleteReview(review._id, index)} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Delete</a>\r\n                            <Link to={{\r\n                              pathname: \"/restaurants/\" + props.match.params.id + \"/review\",\r\n                              state: {\r\n                                currentReview: review\r\n                              }\r\n                            }} className=\"btn btn-primary col-lg-5 mx-1 mb-1\">Edit</Link>\r\n                          </div>                   \r\n                       }\r\n                     </div>\r\n                   </div>\r\n                 </div>\r\n               );\r\n             })\r\n            ) : (\r\n            <div className=\"col-sm-4\">\r\n              <p>No reviews yet.</p>\r\n            </div>\r\n            )}\r\n\r\n          </div>\r\n\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>No restaurant selected.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Restaurant;","C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\services\\restaurant.js",[],[],"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\http-common.js",[],[],"C:\\Users\\cesar\\Desktop\\School\\Software Engineering\\Project-0\\frontend\\src\\components\\spinwheel.js",["54","55","56","57","58"],[],"import React, { useState, useEffect } from \"react\";\r\nimport RestaurantDataService from \"../services/restaurant\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Spinwheel = props => {\r\n\r\n/*\r\n  -changed function name of rotateFunction to Spinwheel the export default works\r\n  -added return(); because the syntax calls for it\r\n  -went into App.js filed and changed the name of the import rotatefunction to spinwheel\r\n  -renamed spinwheel.css to spin.css and spinwheel.html to spinw.html because I think it might\r\n    solve linking issues\r\n  -added a <Route> ... </Route> in the app.js that connects spinwheel.js to app.js\r\n  */\r\n\r\nreturn(\r\n  \r\n  function Spinwheel(){\r\n    var min = 1024;\r\n    var max = 9999;\r\n    var deg = Math.floor(Math.random() * (max - min)) + min;\r\n    document.getElementById('box').style.transform = \"rotate(\"+deg+\"deg)\";\r\n    var element = document.getElementById('mainbox');\r\n    element.classList.remove('animate');\r\n    setTimeout(function(){\r\n      element.classList.add('animate');\r\n    }, 5000);\r\n  }\r\n\r\n);\r\n\r\n};\r\n\r\nexport default Spinwheel;\r\n",{"ruleId":"59","severity":1,"message":"60","line":41,"column":15,"nodeType":"61","endLine":41,"endColumn":83},{"ruleId":"62","severity":1,"message":"63","line":81,"column":23,"nodeType":"64","messageId":"65","endLine":81,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":164,"column":19,"nodeType":"61","messageId":"68","endLine":164,"endColumn":139,"fix":"69"},{"ruleId":"59","severity":1,"message":"60","line":72,"column":29,"nodeType":"61","endLine":72,"endColumn":127},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"75","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"76","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":29},{"ruleId":"70","severity":1,"message":"77","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"78","text":"79"},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'RestaurantDataService' is defined but never used.","'Link' is defined but never used.",[4823,4823]," rel=\"noreferrer\""]